#include<bits/stdc++.h>
using namespace std;
#ifdef DEBUG

//#define deb(...) do{fprintf(stderr,"%s - %d (%s) = ",__PRETTY_FUNCTION__,__LINE__,#__VA_ARGS__);_out(__VA_ARGS__);}while(0);
//template<typename T>               void _out(T &&x){cerr<<x<<endl;}
//template<typename T, typename...S> void _out(T &&x, S &&...y){cerr<<x<<", ";_out(y...)}
//template<typename T, typename S>   ostream& operator << (ostream &os, const pair<T, S> &p){return os<<"("<<p.first<<", "<<p.second<<")";}
//template<typename It>              ostream& _out_it(ostream &os, It ita, It itb)
//{
//	os<<"{"; for(It it=ita;it!=itb;++it) os<<(it==ita?"":", ")<<*itl;os<<"}";
//	return os;
//}
//template<typename T, typename S>   ostream& operator << (ostream &os, const map<T, S>  &m){return _out_it(os,m.begin(),m.end());}
//template<typename T, typename S>   ostream& operator << (ostream &os, const map<T, S>  &m){return _out_it(os,m.begin(),m.end());}
//template<typename T, typename S>   ostream& operator << (ostream &os, const map<T, S>  &m){return _out_it(os,m.begin(),m.end());}

#define INITIO() cout<<setprecision(numeric_limits<double>::max_digits10+1);
#else
#define deb(...)
#define debit(...)
#define endl '\n'
#define INITIO() ios_base::sync_with_stdio(0);cin.tie(0);cout<<setprecision(numeric_limits<double>::max_digits10+1);
#endif
#define X first
#define Y second
typedef long long ll;
const ll inf=0x3f3f3f3f;
const int maxn=1e5+10;
const int ar1[]={111111222,111112223,111113224,111114225,111115226,111116227,111117228,111118229,111121232,111122233,111123234,111124235,111125236,111126237,111127238,111128239,111131242,111132243,111133244,111134245,111135246,111136247,111137248,111138249,111141252,111142253,111143254,111144255,111145256,111146257,111147258,111148259,111151262,111152263,111153264,111154265,111155266,111156267,111157268,111158269,111161272,111162273,111163274,111164275,111165276,111166277,111167278,111168279,111171282,111172283,111173284,111174285,111175286,111176287,111177288,111178289,111181292,111182293,111183294,111184295,111185296,111186297,111187298,111188299,111211322,111212323,111213324,111214325,111215326,111216327,111217328,111218329,111221332,111222333,111223334,111224335,111225336,111226337,111227338,111228339,111231342,111232343,111233344,111234345,111235346,111236347,111237348,111238349,111241352,111242353,111243354,111244355,111245356,111246357,111247358,111248359,111251362,111252363,111253364,111254365};
//const char ar[][30]={"11112","11111122","11111111222","11111111112222","11111111111122222","11111111111111222222","11111111111111112222222","11111111111111111122222222","11111111111111111111222222222","22224","22222244","22222222444","22222222224444","22222222222244444","22222222222222444444","22222222222222224444444","22222222222222222244444444","22222222222222222222444444444","33336","33333366","33333333666","33333333336666","33333333333366666","33333333333333666666","33333333333333336666666","33333333333333333366666666","33333333333333333333666666666","44448","44444488","44444444888","44444444448888","44444444444488888","44444444444444888888","44444444444444448888888","44444444444444444488888888","44444444444444444444888888888","55560","55555610","55555556110","55555555561110","55555555555611110","55555555555556111110","55555555555555561111110","55555555555555555611111110","55555555555555555556111111110","66672","66666732","66666667332","66666666673332","66666666666733332","66666666666667333332","66666666666666673333332","66666666666666666733333332","66666666666666666667333333332","77784","77777854","77777778554","77777777785554","77777777777855554","77777777777778555554","77777777777777785555554","77777777777777777855555554","77777777777777777778555555554","88896","88888976","88888889776","88888888897776","88888888888977776","88888888888889777776","88888888888888897777776","88888888888888888977777776","88888888888888888889777777776","999108","999991098","999999910998","999999999109998","999999999991099998","999999999999910999998","999999999999999109999998","999999999999999991099999998","99999999999999999991099999999","193119312","194229423","195339534","196449645","197559756","198669867","199779978","294119413","295229524","296339635","297449746","298559857","299669968","395119514","396229625","397339736","398449847","399559958","496119615"};
const ll ar2[]={};
ll f(int d,int n) {
	ll ans=0,ten=1;
	for(int i=0;i<n;++i) {
		ans+=ten*d;
		ten*=10LL;
	}
	return ans;
}
ll g(int i,int j, string &s) {
	ll ans=0,ten=1;
	for(int k=j;k>=i;--k) {
		ans+=(s[k]-'0')*ten;
		ten*=10;
	}
	return ans;
}
bool is(ll a,ll b, ll c) {
	stringstream ss;
	ss<<a<<b<<c;
	string s;
	ss>>s;
	int N=s.size();
	int cnt=0;
	for(int i=0;i<N;++i) if(s[i]=='0') return false;
	for(int i=N;i>=0;--i) {
		for(int j=i-1;j>=0;--j) {
			if(g(0,j-1,s)+g(j,i-1,s)==g(i,N-1,s)&&s[0]!='0'&&s[j]!='0'&&s[i]!='0')++cnt;
		}
	}
	if(cnt==2) return true;
	return false;
}
//int calc(ll a,ll b, ll c) {
//	stringstream ss;
//	ss<<a<<b<<c;
//	string s;
//	ss>>s;
//	int N=s.size();
//	int cnt=0;
//	for(int i=N-N/3+1;i>=0;--i) {
//		for(int j=i-1;j>=0;--j) {
//			if(g(0,j-1,s)+g(j,i-1,s)==g(i,N-1,s)&&s[0]!='0'&&s[j]!='0'&&s[i]!='0')++cnt;
//		}
//	}
//	return cnt;
//}
int main(){
	//cout<<is(111,11,122);
	INITIO()
//	is(100,100,200);
	int N,K;
	scanf("%d %d",&K,&N);
	if(K==0) {
		for(int i=0;i<N;++i) {
			printf("00000000%03d\n",i);
		}
	} else if(K==1) {
//		for(ll a=100;a<=1000&&N>0;++a) {
//			for(ll b=100;b<=1000&&N>0;++b) {
//				if(is(a,b,a+b)) {
//					printf("%lld%lld%lld\n",a,b,a+b);
//					--N;
//				}
//			}
//		}
		//cout<<N<<endl;
//		for(int i=0;i<N;++i) {
//			printf("%d0%d\n",i,i);
//		}
		for(int i=0;i<N;++i) printf("%d\n",ar1[i]);
	} else {
//		for(int d=1;d<=9&&N>0;++d) {
//			for(int i=3;i<=19&&N>0;i+=2) {
//				ll a=f(d,i/2),b=f(d,i-i/2);
//				if(!is(a,b,a+b)) continue;//cout<<"ERROR!------------------"<<endl;
//				printf("%lld%lld%lld\n",a,b,a+b);
//				--N;
//			}
//			for(int i=2;i<=20&&N>0;i+=2) {
//				ll a=f(d,i/2),b=f(d,i-i/2);
//				if(!is(a,b,a+b)) continue;//cout<<"ERROR!------------------"<<endl;
//				printf("%lld%lld%lld\n",a,b,a+b);
//				--N;
//			}
//		}
//		for(ll a=100;a<=1000&&N>0;++a) {
//			for(ll b=100;b<=10000&&N>0;++b) {
//				if(is(a,b,a+b)) {
//					printf("%lld%lld%lld\n",a,b,a+b);
//					--N;
//				}
//			}
//		}
//		cout<<N<<endl;
		for(int i=0;i<N;++i) printf("%lld\n",ar2[i]);
	}
	return 0;
}

